[gcode_macro BEACON_VARS]
variable_beacon_contact_calibration_temp: 150                           # nozzle temperature for auto calibration
variable_adaptive_mesh: True                                           # REQUIRES zero_reference_position to be setup in [bed_mesh]
# Do not modify below
gcode:

[gcode_macro FAST_Z_TILT]
gcode:
    M117 Z_TILT
    {% if printer.configfile.settings.z_tilt %}
        {% if printer.z_tilt.applied == False %}
            Z_TILT_ADJUST RETRY_TOLERANCE=1
        {% endif %}
        Z_TILT_ADJUST horizontal_move_z=2
    {% endif %} 

#####################################################################
#   print_start macro
#####################################################################

[gcode_macro PRINT_START]
gcode:
    # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
    _SET_MPC_MATERIAL MATERIAL={params.MATERIAL}
    {% set BED = params.BED|int %}
    {% set EXTRUDER = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default("40")|int %}
    # Collecting variables
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
    {% if printer.configfile.settings['beacon'].home_z_hop is defined %}
        {% set z_hop = printer.configfile.settings['beacon'].home_z_hop|float %}
        {% set speed = printer.configfile.settings['beacon'].home_xy_move_speed|float %}
        {% set z_hop_speed = printer.configfile.settings['beacon'].home_z_hop_speed|float %}
    {% else %}
        {% set z_hop = printer.configfile.settings['safe_z_home'].home_z_hop|float %}
        {% set speed = printer.configfile.settings['safe_z_home'].home_xy_move_speed|float %}
        {% set z_hop_speed = printer.configfile.settings['safe_z_home'].home_z_hop_speed|float %}
    {% endif %}
    {% set beacon_contact_calibration_temp = printer["gcode_macro BEACON_VARS"].beacon_contact_calibration_temp|default(150)|int %}
    {% set adaptive_meshing = printer["gcode_macro BEACON_VARS"].adaptive_mesh|default(false) %}
    
    M104 S{beacon_contact_calibration_temp}
    M140 S{BED}    
    G28
    G90                                                                                         # Absolute positioning

    BED_MESH_CLEAR                                                                              # Clears old saved bed mesh (if any)
    SET_GCODE_OFFSET Z=0                                                                        # Clears current offset

    log MSG="Bed: {BED}c"                                               # Displays info
                                                                  # Sets the target temp for the bed
    
    # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
    log MSG="Hotend: {beacon_contact_calibration_temp}c"                           # Displays info
    M109 S{beacon_contact_calibration_temp}                                                     # Heats up the nozzle to contact temps

    log MSG="Wiping Nozzle"
    #WIPE_NOZZLE                                                                             # Wipes the nozzle via macro if setup
    AFC_BRUSH
    log MSG="Creating Beacon Model"
    G28 Z METHOD=CONTACT CALIBRATE=1                                                            # Calibrate z offset and beacon model hot
    
    {% if printer.z_tilt is defined and not printer.z_tilt.applied %}
        log MSG="Z-tilt adjust"                                                    # Displays info
        {% if printer.configfile.config["gcode_macro FAST_Z_TILT"] is defined %}
            {% if printer.configfile.settings['beacon'].default_probe_method != contact %}
                FAST_Z_TILT                                                                     # Levels the buildplate via Z_TILT but FASTER
            {% endif %}
        {% else %}
            Z_TILT_ADJUST                                                                       # Levels the buildplate via Z_TILT
        {% endif %}
        G28 Z                                                                                   # Homes Z again after z_tilt_adjust
    {% endif %}

    log MSG="Creating bed mesh"                                                             # Displays info
    bed_mesh_calibrate ADAPTIVE=1                                                           # Runs an adaptive bed mesh


    log MSG="Wiping Nozzle"
    #WIPE_NOZZLE                                                           
    AFC_BRUSH
    log MSG="Final Z-offset Calibration"
    G28 Z METHOD=CONTACT CALIBRATE=0                                                            # Calibrate z offset only after tilt/mesh


    # Heats up the nozzle up to target via data from slicer
    log MSG="Hotend: {EXTRUDER}c"                                           # Displays info 
   # SMART_PARK                                                                              # Parks using KAMP


	M107                                                                                        # Turns off partcooling fan
    M109 S{EXTRUDER}                                                                     # Heats the nozzle to printing temp
    
    {% if printer.configfile.config["gcode_macro _BEACON_SET_NOZZLE_TEMP_OFFSET"] is defined %}
        _BEACON_SET_NOZZLE_TEMP_OFFSET                                                          # Adds toolhead expansion offset (REQUIRES ADDITIONAL MACROS NOT BY DEFAULT Found at:https://github.com/YanceyA/Beacon_Thermal_Expansion_Compensation )
    {% endif %}

   # SET_GCODE_OFFSET Z_ADJUST=0                                                               # Apply any additional offset u wish to apply

    # Gets ready to print by doing a purge line
    log MSG="Printer goes brr"                                                     # Displays info
    LINE_PURGE
   
    G90                                                                                         # Absolute positioning
    G1 E.5 F2100  ;unretreact filament from LINE_PURGE Macro

#####################################################################
#   print_end macro
#####################################################################

[gcode_macro PRINT_END]
gcode:

    {% if printer.configfile.settings.beacon is defined %} # reset nozzle thermal expansion offset
      _BEACON_REMOVE_NOZZLE_TEMP_OFFSET
      _BEACON_SET_NOZZLE_TEMP_OFFSET RESET=True
    {% endif %}
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-25.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z5 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X245 Y247 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    log MSG="Job Done"
    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0